env:
  WORKING_DIRECTORY: jekyll

jobs:
  build:
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    name: build_jekyll
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - uses: actions/setup-ruby@v1.0.2
        with:
          ruby-version: "2.6"
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: jekyll-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: bundle_install
        run: bundle install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: npm_build
        run: npm run build
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - env:
          JEKYLL_ENV: production
        name: jekyll_build
        run: bundle exec jekyll build
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: drop_upload
        uses: actions/upload-artifact@v1.0.0
        with:
          name: drop
          path: ${{ env.WORKING_DIRECTORY }}/_site

  deploy:
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_BASE_MESSAGE: $(date --iso-8601='seconds')\ ::\ ${GITHUB_WORKFLOW}\ ::\ ${GITHUB_RUN_NUMBER}
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    name: deploy_jekyll
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: drop_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: drop
      - name: npm_install
        run: npm install netlify-cli
      - if: github.event_name == 'pull_request'
        name: netlify_deploy_preview
        run: npx netlify deploy --dir drop --message ${{ env.NETLIFY_BASE_MESSAGE }}\ ::\ ${GITHUB_HEAD_REF##*/}
      - if: github.event_name != 'pull_request'
        name: netlify_deploy
        run: npx netlify deploy --dir drop --prod --message ${{ env.NETLIFY_BASE_MESSAGE }}\ ::\ ${GITHUB_REF##*/}

  monitor:
    env:
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_RELEASE_VERSION: $(npx -c 'echo rvtr-app@${npm_package_version}')
    name: monitor_jekyll
    needs: deploy
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: jekyll-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name == 'pull_request'
        name: sentry_deploy_dev
        run: npx sentry-cli releases deploys ${{ env.SENTRY_RELEASE_VERSION }} new --env DEV
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - if: github.event_name != 'pull_request'
        name: sentry_deploy
        run: npx sentry-cli releases deploys ${{ env.SENTRY_RELEASE_VERSION }} new --env PROD
        working-directory: ${{ env.WORKING_DIRECTORY }}

name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
