env:
  CACHE_KEY_PREFIX: jekyll
  WORKING_DIRECTORY: jekyll

jobs:
  build:
    env:
      JEKYLL_ENV: production
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    name: build_jekyll
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - uses: actions/setup-ruby@v1.0.2
        with:
          ruby-version: '2.6'
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: bundle_install
        run: bundle install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: npm_build
        run: npm run build
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: jekyll_build
        run: bundle exec jekyll build
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: drop_upload
        uses: actions/upload-artifact@v1.0.0
        with:
          name: drop
          path: ${{ env.WORKING_DIRECTORY }}/_site

  deploy:
    env:
      NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      NETLIFY_MESSAGE: $(date --iso-8601='seconds')\ ::\ $(npx -c 'echo blog@${npm_package_version}')
      NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
    name: deploy_jekyll
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: actions_checkout
        uses: actions/checkout@v2.1.0
      - name: npm_cache
        uses: actions/cache@v1.1.2
        with:
          path: ~/.npm
          key: ${{ env.CACHE_KEY_PREFIX }}-${{ hashFiles('**/package-lock.json') }}
      - name: npm_install
        run: npm clean-install
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - name: drop_download
        uses: actions/download-artifact@v1.0.0
        with:
          name: drop
          path: ${{ env.WORKING_DIRECTORY }}/dist
      - name: netlify_deploy
        run: npx netlify deploy --dir dist --prod --message ${{ env.NETLIFY_MESSAGE }}
        working-directory: ${{ env.WORKING_DIRECTORY }}

name: media

on:
  push:
    paths:
      - '**/_posts/*.md'
